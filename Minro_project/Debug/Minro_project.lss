
Minro_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000228  00800060  000004d8  0000054c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000774  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000ed7  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000f06  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001024  00000000  00000000  00000f8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000251  00000000  00000000  00001fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a3  00000000  00000000  00002203  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  000025a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000026a  00000000  00000000  000026f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006cf  00000000  00000000  0000295e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000302d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 38       	cpi	r26, 0x88	; 136
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	22 e0       	ldi	r18, 0x02	; 2
  78:	a8 e8       	ldi	r26, 0x88	; 136
  7a:	b2 e0       	ldi	r27, 0x02	; 2
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 38       	cpi	r26, 0x88	; 136
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 df 00 	call	0x1be	; 0x1be <main>
  8a:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <usart_init>:
}


void usart_init()
{
	UBRRH = (BAUD_PRESCALE>>8);
  92:	10 bc       	out	0x20, r1	; 32
	UBRRL =BAUD_PRESCALE;
  94:	87 e4       	ldi	r24, 0x47	; 71
  96:	89 b9       	out	0x09, r24	; 9
	UCSRB|= (1<<RXEN)|(1<<TXEN);
  98:	8a b1       	in	r24, 0x0a	; 10
  9a:	88 61       	ori	r24, 0x18	; 24
  9c:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (0<<USBS) | (1 << UCSZ0) | (1 << UCSZ1);
  9e:	80 b5       	in	r24, 0x20	; 32
  a0:	86 68       	ori	r24, 0x86	; 134
  a2:	80 bd       	out	0x20, r24	; 32
  a4:	08 95       	ret

000000a6 <usart_data_transmit>:
}


void usart_data_transmit(unsigned char data )
{
	while ( !( UCSRA & (1<<UDRE)) )
  a6:	5d 9b       	sbis	0x0b, 5	; 11
  a8:	fe cf       	rjmp	.-4      	; 0xa6 <usart_data_transmit>
	;
	UDR = data;
  aa:	8c b9       	out	0x0c, r24	; 12
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	8c ec       	ldi	r24, 0xCC	; 204
  ae:	9a e0       	ldi	r25, 0x0A	; 10
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <usart_data_transmit+0xa>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <usart_data_transmit+0x10>
  b6:	00 00       	nop
  b8:	08 95       	ret

000000ba <hc_05_bluetooth_transmit_byte>:
	


void hc_05_bluetooth_transmit_byte(char data_byte)
{
	usart_data_transmit(data_byte);
  ba:	0e 94 53 00 	call	0xa6	; 0xa6 <usart_data_transmit>
  be:	08 95       	ret

000000c0 <usart_data_receive>:
	_delay_ms(1);
}

unsigned char usart_data_receive( void )
{
	while ( !(UCSRA & (1<<RXC)) );
  c0:	5f 9b       	sbis	0x0b, 7	; 11
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <usart_data_receive>
	return UDR;
  c4:	8c b1       	in	r24, 0x0c	; 12
}
  c6:	08 95       	ret

000000c8 <hc_05_bluetooth_receive_byte>:
{
	usart_data_transmit(data_byte);
}
char hc_05_bluetooth_receive_byte(void)
{
	return usart_data_receive();
  c8:	0e 94 60 00 	call	0xc0	; 0xc0 <usart_data_receive>
}
  cc:	08 95       	ret

000000ce <usart_string_transmit>:
	while ( !(UCSRA & (1<<RXC)) );
	return UDR;
}

void usart_string_transmit(char *string)
{
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	ec 01       	movw	r28, r24
	while(*string)
  d4:	88 81       	ld	r24, Y
  d6:	88 23       	and	r24, r24
  d8:	31 f0       	breq	.+12     	; 0xe6 <usart_string_transmit+0x18>
{
	while ( !(UCSRA & (1<<RXC)) );
	return UDR;
}

void usart_string_transmit(char *string)
  da:	21 96       	adiw	r28, 0x01	; 1
{
	while(*string)
	{
		usart_data_transmit(*string++);
  dc:	0e 94 53 00 	call	0xa6	; 0xa6 <usart_data_transmit>
	return UDR;
}

void usart_string_transmit(char *string)
{
	while(*string)
  e0:	89 91       	ld	r24, Y+
  e2:	81 11       	cpse	r24, r1
  e4:	fb cf       	rjmp	.-10     	; 0xdc <usart_string_transmit+0xe>
	{
		usart_data_transmit(*string++);
	}
}
  e6:	df 91       	pop	r29
  e8:	cf 91       	pop	r28
  ea:	08 95       	ret

000000ec <hc_05_bluetooth_transmit_string>:
{
	return usart_data_receive();
}
void hc_05_bluetooth_transmit_string(char *transmit_string)
{
	usart_string_transmit(transmit_string);
  ec:	0e 94 67 00 	call	0xce	; 0xce <usart_string_transmit>
  f0:	08 95       	ret

000000f2 <LCD_cmd>:

	return ;
}
void LCD_cmd(unsigned char cmd)
{
	PORTC=cmd;
  f2:	85 bb       	out	0x15, r24	; 21
	ctrl=(0<<rs)|(0<<rw)|(1<<en);
  f4:	80 e8       	ldi	r24, 0x80	; 128
  f6:	8b bb       	out	0x1b, r24	; 27
  f8:	8c ec       	ldi	r24, 0xCC	; 204
  fa:	9a e0       	ldi	r25, 0x0A	; 10
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <LCD_cmd+0xa>
 100:	00 c0       	rjmp	.+0      	; 0x102 <LCD_cmd+0x10>
 102:	00 00       	nop
	_delay_ms(1);
	ctrl=(0<<rs)|(0<<rw)|(0<<en);
 104:	1b ba       	out	0x1b, r1	; 27
 106:	8c ec       	ldi	r24, 0xCC	; 204
 108:	9a e0       	ldi	r25, 0x0A	; 10
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <LCD_cmd+0x18>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <LCD_cmd+0x1e>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <init_LCD>:
}
//LCD command

void init_LCD(void)
{
	LCD_cmd(0x38);
 114:	88 e3       	ldi	r24, 0x38	; 56
 116:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
 11a:	8c ec       	ldi	r24, 0xCC	; 204
 11c:	9a e0       	ldi	r25, 0x0A	; 10
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <init_LCD+0xa>
 122:	00 c0       	rjmp	.+0      	; 0x124 <init_LCD+0x10>
 124:	00 00       	nop
	_delay_ms(1);
	LCD_cmd(0x01);
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
 12c:	8c ec       	ldi	r24, 0xCC	; 204
 12e:	9a e0       	ldi	r25, 0x0A	; 10
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <init_LCD+0x1c>
 134:	00 c0       	rjmp	.+0      	; 0x136 <init_LCD+0x22>
 136:	00 00       	nop
	_delay_ms(1);
	LCD_cmd(0x80);
 138:	80 e8       	ldi	r24, 0x80	; 128
 13a:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
 13e:	8c ec       	ldi	r24, 0xCC	; 204
 140:	9a e0       	ldi	r25, 0x0A	; 10
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <init_LCD+0x2e>
 146:	00 c0       	rjmp	.+0      	; 0x148 <init_LCD+0x34>
 148:	00 00       	nop
 14a:	8f ef       	ldi	r24, 0xFF	; 255
 14c:	9b e6       	ldi	r25, 0x6B	; 107
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <init_LCD+0x3a>
 152:	00 c0       	rjmp	.+0      	; 0x154 <init_LCD+0x40>
 154:	00 00       	nop
	_delay_ms(1);
	_delay_ms(10);
	LCD_cmd(0x06);
 156:	86 e0       	ldi	r24, 0x06	; 6
 158:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
 15c:	8c ec       	ldi	r24, 0xCC	; 204
 15e:	9a e0       	ldi	r25, 0x0A	; 10
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <init_LCD+0x4c>
 164:	00 c0       	rjmp	.+0      	; 0x166 <init_LCD+0x52>
 166:	00 00       	nop
	_delay_ms(1);
	LCD_cmd(0x0c);
 168:	8c e0       	ldi	r24, 0x0C	; 12
 16a:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
 16e:	8c ec       	ldi	r24, 0xCC	; 204
 170:	9a e0       	ldi	r25, 0x0A	; 10
 172:	01 97       	sbiw	r24, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <init_LCD+0x5e>
 176:	00 c0       	rjmp	.+0      	; 0x178 <init_LCD+0x64>
 178:	00 00       	nop
 17a:	08 95       	ret

0000017c <LCD_write>:
	_delay_ms(1);
	return;
}
void LCD_write(unsigned char data)
{
	PORTC=data;
 17c:	85 bb       	out	0x15, r24	; 21
	ctrl=(1<<rs)|(0<<rw)|(1<<en);
 17e:	80 ea       	ldi	r24, 0xA0	; 160
 180:	8b bb       	out	0x1b, r24	; 27
 182:	8c ec       	ldi	r24, 0xCC	; 204
 184:	9a e0       	ldi	r25, 0x0A	; 10
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <LCD_write+0xa>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCD_write+0x10>
 18c:	00 00       	nop
	_delay_ms(1);
	ctrl=(1<<rs)|(0<<rw)|(0<<en);
 18e:	80 e2       	ldi	r24, 0x20	; 32
 190:	8b bb       	out	0x1b, r24	; 27
 192:	8c ec       	ldi	r24, 0xCC	; 204
 194:	9a e0       	ldi	r25, 0x0A	; 10
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <LCD_write+0x1a>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <LCD_write+0x20>
 19c:	00 00       	nop
 19e:	08 95       	ret

000001a0 <LCD_write_string>:
	_delay_ms(1);
	return;
}
void LCD_write_string(unsigned char *str)
{
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
 1a4:	ec 01       	movw	r28, r24
	int i=0;
	while(str[i]!='\0')
 1a6:	88 81       	ld	r24, Y
 1a8:	88 23       	and	r24, r24
 1aa:	31 f0       	breq	.+12     	; 0x1b8 <LCD_write_string+0x18>
	_delay_ms(1);
	ctrl=(1<<rs)|(0<<rw)|(0<<en);
	_delay_ms(1);
	return;
}
void LCD_write_string(unsigned char *str)
 1ac:	21 96       	adiw	r28, 0x01	; 1
{
	int i=0;
	while(str[i]!='\0')
	{
		LCD_write(str[i]);
 1ae:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_write>
	return;
}
void LCD_write_string(unsigned char *str)
{
	int i=0;
	while(str[i]!='\0')
 1b2:	89 91       	ld	r24, Y+
 1b4:	81 11       	cpse	r24, r1
 1b6:	fb cf       	rjmp	.-10     	; 0x1ae <LCD_write_string+0xe>
	{
		LCD_write(str[i]);
		i++;
	}
	return;
}
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	08 95       	ret

000001be <main>:
char *usart_string_receive(char *receive_string,unsigned char terminating_character);

int main(void)
{
	
	DDRD = 0xFF;  //tx and rx
 1be:	8f ef       	ldi	r24, 0xFF	; 255
 1c0:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;  //lcd data
 1c2:	84 bb       	out	0x14, r24	; 20
	DDRB = 0xFF;   //relay
 1c4:	87 bb       	out	0x17, r24	; 23
	DDRA= 0xFF;    //lcd ctrl
 1c6:	8a bb       	out	0x1a, r24	; 26
	
	init_LCD();
 1c8:	0e 94 8a 00 	call	0x114	; 0x114 <init_LCD>
	LCD_write_string("WIRELESS SWITCHING ");
 1cc:	80 e6       	ldi	r24, 0x60	; 96
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
	LCD_cmd(0xc0);
 1d4:	80 ec       	ldi	r24, 0xC0	; 192
 1d6:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
	LCD_write_string("   WELCOME");
 1da:	82 e6       	ldi	r24, 0x62	; 98
 1dc:	92 e0       	ldi	r25, 0x02	; 2
 1de:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
	
	
	char received_data;
	/*Variable declaration*/
	
	usart_init();
 1e2:	0e 94 49 00 	call	0x92	; 0x92 <usart_init>
	/*USART initialization*/
	
	hc_05_bluetooth_transmit_string("Wireless Switching");
 1e6:	84 e7       	ldi	r24, 0x74	; 116
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth of Module*/

	hc_05_bluetooth_transmit_byte(0x0d);
 1ee:	8d e0       	ldi	r24, 0x0D	; 13
 1f0:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth Module*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 1f4:	8a e0       	ldi	r24, 0x0A	; 10
 1f6:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth Module for new line*/

	hc_05_bluetooth_transmit_string("Final Defence");
 1fa:	87 e8       	ldi	r24, 0x87	; 135
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth Module*/

	hc_05_bluetooth_transmit_byte(0x0d);
 202:	8d e0       	ldi	r24, 0x0D	; 13
 204:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth Module*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 208:	8a e0       	ldi	r24, 0x0A	; 10
 20a:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth Module for new line*/
	
	hc_05_bluetooth_transmit_string("Control Keys for Appliances:");
 20e:	85 e9       	ldi	r24, 0x95	; 149
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth of Module*/

	hc_05_bluetooth_transmit_byte(0x0d);
 216:	8d e0       	ldi	r24, 0x0D	; 13
 218:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth Module*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 21c:	8a e0       	ldi	r24, 0x0A	; 10
 21e:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth Module for new line*/
	
	hc_05_bluetooth_transmit_string("1=Appliance 1 ON or OFF");
 222:	82 eb       	ldi	r24, 0xB2	; 178
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth of Module*/

	hc_05_bluetooth_transmit_byte(0x0d);
 22a:	8d e0       	ldi	r24, 0x0D	; 13
 22c:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return */
	
	hc_05_bluetooth_transmit_byte(0x0a);
 230:	8a e0       	ldi	r24, 0x0A	; 10
 232:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line */

	hc_05_bluetooth_transmit_string("2=Appliance 2 ON or OFF");
 236:	8a ec       	ldi	r24, 0xCA	; 202
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth*/

	hc_05_bluetooth_transmit_byte(0x0d);
 23e:	8d e0       	ldi	r24, 0x0D	; 13
 240:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 244:	8a e0       	ldi	r24, 0x0A	; 10
 246:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth */

	hc_05_bluetooth_transmit_string("3=Appliance 3 ON or OFF");
 24a:	82 ee       	ldi	r24, 0xE2	; 226
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth */

	hc_05_bluetooth_transmit_byte(0x0d);
 252:	8d e0       	ldi	r24, 0x0D	; 13
 254:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 258:	8a e0       	ldi	r24, 0x0A	; 10
 25a:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth Module for new line*/

	hc_05_bluetooth_transmit_string("4=Appliance 4 ON ");
 25e:	8a ef       	ldi	r24, 0xFA	; 250
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth of Module*/

	hc_05_bluetooth_transmit_byte(0x0d);
 266:	8d e0       	ldi	r24, 0x0D	; 13
 268:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth */
	hc_05_bluetooth_transmit_string("7=Appliance 4 OFF");
 26c:	8c e0       	ldi	r24, 0x0C	; 12
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth of Module*/

	hc_05_bluetooth_transmit_byte(0x0d);
 274:	8d e0       	ldi	r24, 0x0D	; 13
 276:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth */
	
	hc_05_bluetooth_transmit_byte(0x0a);
 27a:	8a e0       	ldi	r24, 0x0A	; 10
 27c:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth */
	
	hc_05_bluetooth_transmit_string("5=All Appliances ON");
 280:	8e e1       	ldi	r24, 0x1E	; 30
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth */

	hc_05_bluetooth_transmit_byte(0x0d);
 288:	8d e0       	ldi	r24, 0x0D	; 13
 28a:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 28e:	8a e0       	ldi	r24, 0x0A	; 10
 290:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits New Line to Bluetooth Module */

	hc_05_bluetooth_transmit_string("6=All Appliances OFF");
 294:	82 e3       	ldi	r24, 0x32	; 50
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
	/*Transmits a string to Bluetooth */

	hc_05_bluetooth_transmit_byte(0x0d);
 29c:	8d e0       	ldi	r24, 0x0D	; 13
 29e:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
	/*Transmits Carriage return to Bluetooth*/
	
	hc_05_bluetooth_transmit_byte(0x0a);
 2a2:	8a e0       	ldi	r24, 0x0A	; 10
 2a4:	0e 94 5d 00 	call	0xba	; 0xba <hc_05_bluetooth_transmit_byte>
		received_data=hc_05_bluetooth_receive_byte();
		/*Microcontroller will receive a character from Bluetooth Module*/
		
		if(received_data == '1')
		{
			PORTB^=0x01;
 2a8:	c1 e0       	ldi	r28, 0x01	; 1
				_delay_ms(1000);
			}
		}
		else if(received_data == '5')
		{
			PORTB^=0x07;
 2aa:	0f 2e       	mov	r0, r31
 2ac:	f7 e0       	ldi	r31, 0x07	; 7
 2ae:	ff 2e       	mov	r15, r31
 2b0:	f0 2d       	mov	r31, r0

			}
		}
		else if(received_data == '4')
		{
			PORTB^=0x08;  /*Appliance 4 changes status*/
 2b2:	08 e0       	ldi	r16, 0x08	; 8

			}
		}
		else if(received_data == '3')
		{
			PORTB^=0x04;   /*Appliance 3 changes status*/
 2b4:	14 e0       	ldi	r17, 0x04	; 4
				
			}
		}
		else if(received_data == '2')
		{
			PORTB^=0x02;	   /*Appliance 2 changes status*/
 2b6:	d2 e0       	ldi	r29, 0x02	; 2
	/*Checking the pressed key to Turn ON and OFF appliances*/
	while(1)
	{
		
		/*Start of infinite loop*/
		received_data=hc_05_bluetooth_receive_byte();
 2b8:	0e 94 64 00 	call	0xc8	; 0xc8 <hc_05_bluetooth_receive_byte>
		/*Microcontroller will receive a character from Bluetooth Module*/
		
		if(received_data == '1')
 2bc:	81 33       	cpi	r24, 0x31	; 49
 2be:	79 f5       	brne	.+94     	; 0x31e <main+0x160>
		{
			PORTB^=0x01;
 2c0:	88 b3       	in	r24, 0x18	; 24
 2c2:	8c 27       	eor	r24, r28
 2c4:	88 bb       	out	0x18, r24	; 24
			
			/*Appliance 1 changes status*/
			
			if(PORTB & 0x01)
 2c6:	c0 9b       	sbis	0x18, 0	; 24
 2c8:	15 c0       	rjmp	.+42     	; 0x2f4 <main+0x136>
			{
				hc_05_bluetooth_transmit_string("Appliance 1 is ON");	   /*Transmits a string to Bluetooth of Module*/
 2ca:	87 e4       	ldi	r24, 0x47	; 71
 2cc:	91 e0       	ldi	r25, 0x01	; 1
 2ce:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0xc0);
 2d2:	80 ec       	ldi	r24, 0xC0	; 192
 2d4:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("BULB 1 ON");
 2d8:	89 e5       	ldi	r24, 0x59	; 89
 2da:	91 e0       	ldi	r25, 0x01	; 1
 2dc:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 2e0:	2f ef       	ldi	r18, 0xFF	; 255
 2e2:	8f eb       	ldi	r24, 0xBF	; 191
 2e4:	91 e2       	ldi	r25, 0x21	; 33
 2e6:	21 50       	subi	r18, 0x01	; 1
 2e8:	80 40       	sbci	r24, 0x00	; 0
 2ea:	90 40       	sbci	r25, 0x00	; 0
 2ec:	e1 f7       	brne	.-8      	; 0x2e6 <main+0x128>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <main+0x132>
 2f0:	00 00       	nop
 2f2:	e2 cf       	rjmp	.-60     	; 0x2b8 <main+0xfa>
				_delay_ms(1000);
				
			}
			else
			{
				hc_05_bluetooth_transmit_string("Appliance 1 is OFF");	   /*Transmits a string to Bluetooth of Module*/
 2f4:	83 e6       	ldi	r24, 0x63	; 99
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0xc0);
 2fc:	80 ec       	ldi	r24, 0xC0	; 192
 2fe:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("BULB 1 OFF");
 302:	86 e7       	ldi	r24, 0x76	; 118
 304:	91 e0       	ldi	r25, 0x01	; 1
 306:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 30a:	2f ef       	ldi	r18, 0xFF	; 255
 30c:	8f eb       	ldi	r24, 0xBF	; 191
 30e:	91 e2       	ldi	r25, 0x21	; 33
 310:	21 50       	subi	r18, 0x01	; 1
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0x152>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0x15c>
 31a:	00 00       	nop
 31c:	cd cf       	rjmp	.-102    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);
				
			}
		}
		else if(received_data == '2')
 31e:	82 33       	cpi	r24, 0x32	; 50
 320:	79 f5       	brne	.+94     	; 0x380 <main+0x1c2>
		{
			PORTB^=0x02;	   /*Appliance 2 changes status*/
 322:	88 b3       	in	r24, 0x18	; 24
 324:	8d 27       	eor	r24, r29
 326:	88 bb       	out	0x18, r24	; 24

			if(PORTB & 0x02)
 328:	c1 9b       	sbis	0x18, 1	; 24
 32a:	15 c0       	rjmp	.+42     	; 0x356 <main+0x198>
			{
				hc_05_bluetooth_transmit_string("Appliance 2 is ON");   /*Transmits a string to Bluetooth of Module*/
 32c:	81 e8       	ldi	r24, 0x81	; 129
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0xc0);
 334:	80 ec       	ldi	r24, 0xC0	; 192
 336:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("BULB 2 ON");
 33a:	83 e9       	ldi	r24, 0x93	; 147
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 342:	2f ef       	ldi	r18, 0xFF	; 255
 344:	8f eb       	ldi	r24, 0xBF	; 191
 346:	91 e2       	ldi	r25, 0x21	; 33
 348:	21 50       	subi	r18, 0x01	; 1
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <main+0x18a>
 350:	00 c0       	rjmp	.+0      	; 0x352 <main+0x194>
 352:	00 00       	nop
 354:	b1 cf       	rjmp	.-158    	; 0x2b8 <main+0xfa>
				

			}
			else
			{
				hc_05_bluetooth_transmit_string("Appliance 2 is OFF");   /*Transmits a string to Bluetooth of Module*/
 356:	8d e9       	ldi	r24, 0x9D	; 157
 358:	91 e0       	ldi	r25, 0x01	; 1
 35a:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0xc0);
 35e:	80 ec       	ldi	r24, 0xC0	; 192
 360:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("BULB 2 OFF");
 364:	80 eb       	ldi	r24, 0xB0	; 176
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 36c:	2f ef       	ldi	r18, 0xFF	; 255
 36e:	8f eb       	ldi	r24, 0xBF	; 191
 370:	91 e2       	ldi	r25, 0x21	; 33
 372:	21 50       	subi	r18, 0x01	; 1
 374:	80 40       	sbci	r24, 0x00	; 0
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <main+0x1b4>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <main+0x1be>
 37c:	00 00       	nop
 37e:	9c cf       	rjmp	.-200    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);

			}
		}
		else if(received_data == '3')
 380:	83 33       	cpi	r24, 0x33	; 51
 382:	79 f5       	brne	.+94     	; 0x3e2 <main+0x224>
		{
			PORTB^=0x04;   /*Appliance 3 changes status*/
 384:	88 b3       	in	r24, 0x18	; 24
 386:	81 27       	eor	r24, r17
 388:	88 bb       	out	0x18, r24	; 24

			if(PORTB & 0x04)
 38a:	c2 9b       	sbis	0x18, 2	; 24
 38c:	15 c0       	rjmp	.+42     	; 0x3b8 <main+0x1fa>
			{
				hc_05_bluetooth_transmit_string("Appliance 3 is ON");   /*Transmits a string to Bluetooth of Module*/
 38e:	8b eb       	ldi	r24, 0xBB	; 187
 390:	91 e0       	ldi	r25, 0x01	; 1
 392:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0xc0);
 396:	80 ec       	ldi	r24, 0xC0	; 192
 398:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("BULB 3 ON");
 39c:	8d ec       	ldi	r24, 0xCD	; 205
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 3a4:	2f ef       	ldi	r18, 0xFF	; 255
 3a6:	8f eb       	ldi	r24, 0xBF	; 191
 3a8:	91 e2       	ldi	r25, 0x21	; 33
 3aa:	21 50       	subi	r18, 0x01	; 1
 3ac:	80 40       	sbci	r24, 0x00	; 0
 3ae:	90 40       	sbci	r25, 0x00	; 0
 3b0:	e1 f7       	brne	.-8      	; 0x3aa <main+0x1ec>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <main+0x1f6>
 3b4:	00 00       	nop
 3b6:	80 cf       	rjmp	.-256    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);

			}
			else
			{
				hc_05_bluetooth_transmit_string("Appliance 3 is OFF");   /*Transmits a string to Bluetooth of Module*/
 3b8:	87 ed       	ldi	r24, 0xD7	; 215
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0xc0);
 3c0:	80 ec       	ldi	r24, 0xC0	; 192
 3c2:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("BULB 3 OFF");
 3c6:	8a ee       	ldi	r24, 0xEA	; 234
 3c8:	91 e0       	ldi	r25, 0x01	; 1
 3ca:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 3ce:	2f ef       	ldi	r18, 0xFF	; 255
 3d0:	8f eb       	ldi	r24, 0xBF	; 191
 3d2:	91 e2       	ldi	r25, 0x21	; 33
 3d4:	21 50       	subi	r18, 0x01	; 1
 3d6:	80 40       	sbci	r24, 0x00	; 0
 3d8:	90 40       	sbci	r25, 0x00	; 0
 3da:	e1 f7       	brne	.-8      	; 0x3d4 <main+0x216>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x220>
 3de:	00 00       	nop
 3e0:	6b cf       	rjmp	.-298    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);

			}
		}
		else if(received_data == '4')
 3e2:	84 33       	cpi	r24, 0x34	; 52
 3e4:	79 f5       	brne	.+94     	; 0x444 <main+0x286>
		{
			PORTB^=0x08;  /*Appliance 4 changes status*/
 3e6:	88 b3       	in	r24, 0x18	; 24
 3e8:	80 27       	eor	r24, r16
 3ea:	88 bb       	out	0x18, r24	; 24
			if(PORTB & 0x08)
 3ec:	c3 9b       	sbis	0x18, 3	; 24
 3ee:	15 c0       	rjmp	.+42     	; 0x41a <main+0x25c>
			{
				hc_05_bluetooth_transmit_string("Appliance 4 is ON");
 3f0:	85 ef       	ldi	r24, 0xF5	; 245
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0XC0);
 3f8:	80 ec       	ldi	r24, 0xC0	; 192
 3fa:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("Door Open");
 3fe:	87 e0       	ldi	r24, 0x07	; 7
 400:	92 e0       	ldi	r25, 0x02	; 2
 402:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 406:	2f ef       	ldi	r18, 0xFF	; 255
 408:	8f eb       	ldi	r24, 0xBF	; 191
 40a:	91 e2       	ldi	r25, 0x21	; 33
 40c:	21 50       	subi	r18, 0x01	; 1
 40e:	80 40       	sbci	r24, 0x00	; 0
 410:	90 40       	sbci	r25, 0x00	; 0
 412:	e1 f7       	brne	.-8      	; 0x40c <main+0x24e>
 414:	00 c0       	rjmp	.+0      	; 0x416 <main+0x258>
 416:	00 00       	nop
 418:	4f cf       	rjmp	.-354    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);
			}
			else
			{
				hc_05_bluetooth_transmit_string("Appliance 4 is OFF");  /*Transmits a string to Bluetooth of Module*/
 41a:	81 e1       	ldi	r24, 0x11	; 17
 41c:	92 e0       	ldi	r25, 0x02	; 2
 41e:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0XC0);
 422:	80 ec       	ldi	r24, 0xC0	; 192
 424:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("Door Close");
 428:	84 e2       	ldi	r24, 0x24	; 36
 42a:	92 e0       	ldi	r25, 0x02	; 2
 42c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 430:	2f ef       	ldi	r18, 0xFF	; 255
 432:	8f eb       	ldi	r24, 0xBF	; 191
 434:	91 e2       	ldi	r25, 0x21	; 33
 436:	21 50       	subi	r18, 0x01	; 1
 438:	80 40       	sbci	r24, 0x00	; 0
 43a:	90 40       	sbci	r25, 0x00	; 0
 43c:	e1 f7       	brne	.-8      	; 0x436 <main+0x278>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <main+0x282>
 440:	00 00       	nop
 442:	3a cf       	rjmp	.-396    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);
			}
		}
		else if(received_data == '5')
 444:	85 33       	cpi	r24, 0x35	; 53
 446:	81 f5       	brne	.+96     	; 0x4a8 <main+0x2ea>
		{
			PORTB^=0x07;
 448:	88 b3       	in	r24, 0x18	; 24
 44a:	8f 25       	eor	r24, r15
 44c:	88 bb       	out	0x18, r24	; 24
			if(PORTB & 0x07)
 44e:	88 b3       	in	r24, 0x18	; 24
 450:	87 70       	andi	r24, 0x07	; 7
 452:	a9 f0       	breq	.+42     	; 0x47e <main+0x2c0>
			{
				hc_05_bluetooth_transmit_string("All Appliance are ON");
 454:	8f e2       	ldi	r24, 0x2F	; 47
 456:	92 e0       	ldi	r25, 0x02	; 2
 458:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0XC0);
 45c:	80 ec       	ldi	r24, 0xC0	; 192
 45e:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("All ON");
 462:	84 e4       	ldi	r24, 0x44	; 68
 464:	92 e0       	ldi	r25, 0x02	; 2
 466:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 46a:	2f ef       	ldi	r18, 0xFF	; 255
 46c:	8f eb       	ldi	r24, 0xBF	; 191
 46e:	91 e2       	ldi	r25, 0x21	; 33
 470:	21 50       	subi	r18, 0x01	; 1
 472:	80 40       	sbci	r24, 0x00	; 0
 474:	90 40       	sbci	r25, 0x00	; 0
 476:	e1 f7       	brne	.-8      	; 0x470 <main+0x2b2>
 478:	00 c0       	rjmp	.+0      	; 0x47a <main+0x2bc>
 47a:	00 00       	nop
 47c:	1d cf       	rjmp	.-454    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);
			}
			else
			
			{
				hc_05_bluetooth_transmit_string("All Appliance are OFF");  /*Transmits a string to Bluetooth of Module*/
 47e:	8b e4       	ldi	r24, 0x4B	; 75
 480:	92 e0       	ldi	r25, 0x02	; 2
 482:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
				LCD_cmd(0XC0);
 486:	80 ec       	ldi	r24, 0xC0	; 192
 488:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
				LCD_write_string("All Appliance are OFF");
 48c:	8b e4       	ldi	r24, 0x4B	; 75
 48e:	92 e0       	ldi	r25, 0x02	; 2
 490:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 494:	2f ef       	ldi	r18, 0xFF	; 255
 496:	8f eb       	ldi	r24, 0xBF	; 191
 498:	91 e2       	ldi	r25, 0x21	; 33
 49a:	21 50       	subi	r18, 0x01	; 1
 49c:	80 40       	sbci	r24, 0x00	; 0
 49e:	90 40       	sbci	r25, 0x00	; 0
 4a0:	e1 f7       	brne	.-8      	; 0x49a <main+0x2dc>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <main+0x2e6>
 4a4:	00 00       	nop
 4a6:	08 cf       	rjmp	.-496    	; 0x2b8 <main+0xfa>
				_delay_ms(1000);
			}
		}
		
		else if (received_data== ' ')
 4a8:	80 32       	cpi	r24, 0x20	; 32
 4aa:	41 f4       	brne	.+16     	; 0x4bc <main+0x2fe>
		{
			LCD_cmd(0xc0);
 4ac:	80 ec       	ldi	r24, 0xC0	; 192
 4ae:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
			LCD_write_string("    WELCOME");
 4b2:	81 e6       	ldi	r24, 0x61	; 97
 4b4:	92 e0       	ldi	r25, 0x02	; 2
 4b6:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 4ba:	fe ce       	rjmp	.-516    	; 0x2b8 <main+0xfa>
		}
		else
		{
			hc_05_bluetooth_transmit_string("Invalid Key");  /*Transmits a string to Bluetooth of Module*/
 4bc:	8d e6       	ldi	r24, 0x6D	; 109
 4be:	92 e0       	ldi	r25, 0x02	; 2
 4c0:	0e 94 76 00 	call	0xec	; 0xec <hc_05_bluetooth_transmit_string>
			LCD_cmd(0xc0);
 4c4:	80 ec       	ldi	r24, 0xC0	; 192
 4c6:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_cmd>
			LCD_write_string("received_data");
 4ca:	89 e7       	ldi	r24, 0x79	; 121
 4cc:	92 e0       	ldi	r25, 0x02	; 2
 4ce:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_write_string>
 4d2:	f2 ce       	rjmp	.-540    	; 0x2b8 <main+0xfa>

000004d4 <_exit>:
 4d4:	f8 94       	cli

000004d6 <__stop_program>:
 4d6:	ff cf       	rjmp	.-2      	; 0x4d6 <__stop_program>
